// Emp.java

package com.CRUD.beans;

public class Emp {
	private int id;
	private String name;
	private float salary;
	private String designation;
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public float getSalary() {
		return salary;
	}
	public void setSalary(float salary) {
		this.salary = salary;
	}
	public String getDesignation() {
		return designation;
	}
	public void setDesignation(String designation) {
		this.designation = designation;
	}	
}

// EmpController.java

package com.CRUD.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.CRUD.beans.Emp;
import com.CRUD.dao.EmpDao;

@Controller
public class EmpController {
	@Autowired
	EmpDao dao;
	
	@RequestMapping("/empform")
	public String showform(Model m) {
		m.addAttribute("command", new Emp());
		return "empform";
	}
	@RequestMapping(value="/save", method = RequestMethod.POST)
	public String save(@ModelAttribute("emp") Emp emp) {
		dao.save(emp);
		return "redirect:/viewemp";
	}
	@RequestMapping("/viewemp")
	public String viewemp(Model m) {
		List<Emp> list = dao.getEmployees();
		m.addAttribute("list",list);
		return "viewemp";
	}
	 @RequestMapping(value="/editemp/{id}")  
	    public String edit(@PathVariable int id, Model m){  
	        Emp emp=dao.getEmpById(id);  
	        m.addAttribute("command",emp);
	        return "empeditform";  
	    }  
	    /* It updates model object. */  
	    @RequestMapping(value="/editsave",method = RequestMethod.POST)  
	    public String editsave(@ModelAttribute("emp") Emp emp){  
	        dao.update(emp);  
	        return "redirect:/viewemp";
	    }  
	@RequestMapping(value="/deleteemp/{id}",method=RequestMethod.GET)
	public String delete(@PathVariable int id) {
		dao.delete(id);
		return "redirect:/viewemp";
	}
}

//EmpDao.java

package com.CRUD.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import com.CRUD.beans.Emp;

public class EmpDao {
	JdbcTemplate template;
	public void setTemplate(JdbcTemplate template) {
		this.template = template;
	}
	public int save(Emp p) {
		String sql="insert into Emp99(name,salary,designation) values('"+p.getName()+"',"+p.getSalary()+",'"+p.getDesignation()+"')";
		return template.update(sql);
	}
	public int update(Emp p) {
		String sql="update Emp99 set name='"+p.getName()+"', salary="+p.getSalary()+",designation='"+p.getDesignation()+"' "
	    		+ "where id="+p.getId()+"";
		return template.update(sql);
	}
	public int delete(int id) {
		String sql = "delete from Emp99 where id="+id+"";
		return template.update(sql);
	}
	public Emp getEmpById(int id) {
		String sql="select * from Emp99 where id=?";
		return template.queryForObject(sql, new Object[]{id}, new BeanPropertyRowMapper<Emp>(Emp.class));
	}
	
	public List<Emp> getEmployees(){
		return template.query("select * from Emp99", new RowMapper<Emp>() {
			public Emp mapRow(ResultSet rs, int row) throws SQLException{
				Emp e = new Emp();
				e.setId(rs.getInt(1));
				e.setName(rs.getString(2));
				e.setSalary(rs.getFloat(3));
				e.setDesignation(rs.getString(4));
				return e;
			}
		});
	}
}


// index.jsp

<html>
<body bgcolor="grey">
<h2>Welcome to Employee Portal</h2>
<a href="empform">Add Employee</a>
<a href="viewemp">View Employees</a>
</body>
</html>

// empeditform.jsp

<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>  
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>  

		<h1>Edit Employee</h1>
       <form:form method="POST" action="editsave">  
      	<table >  
      	<tr>
      	<td></td>  
         <td><form:hidden  path="id" /></td>
         </tr> 
         <tr>  
          <td>Name : </td> 
          <td><form:input path="name"  /></td>
         </tr>  
         <tr>  
          <td>Salary :</td>  
          <td><form:input path="salary" /></td>
         </tr> 
         <tr>  
          <td>Designation :</td>  
          <td><form:input path="designation" /></td>
         </tr> 
         
         <tr>  
          <td> </td>  
          <td><input type="submit" value="Edit Save" /></td>  
         </tr>  
        </table>  
       </form:form>  

//empform.jsp

<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<h1>Add New Employee</h1>
   <form:form method="post" action="save">
   <table>
    <tr>
     <td>Name: </td>
     <td><form:input path="name"/></td>
    </tr>
    <tr>
     <td>Salary: </td>
     <td><form:input path="salary"/></td>
    </tr>
    <tr>
     <td>Designation: </td>
     <td><form:input path="designation"/></td>
    </tr>
    <tr>
     <td></td>
     <td><input type="submit" value="Save"/></td>
    </tr>
   </table> 
   </form:form>

// viewemp.jsp

<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<h1>Employee List</h1>
<table border="2" width="70%" cellpadding="2"">
	<tr>
	 <th>Id</th>
	 <th>Name</th>
	 <th>Salary</th>
	 <th>Designation</th>
	 <th>Edit</th>
	 <th>Delete</th>
	</tr>
	<c:forEach var="emp" items="${list}">
	 <tr>
	 	<td>${emp.id}</td>
	 	<td>${emp.name}</td>
	 	<td>${emp.salary}</td>
	 	<td>${emp.designation}</td>
	 	<td><a href="editemp/${emp.id}">Edit</a></td>
	 	<td><a href="deleteemp/${emp.id}">Delete</a></td>
	 </tr>
	</c:forEach>
</table>
<br/>
<a href="empform">Add New Employee</a>

// spring-servlet.jsp

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
<context:component-scan base-package="com.pagination.controller"/>
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<property name="prefix" value="/WEB-INF/jsp/"/>
<property name="suffix" value=".jsp"/>
</bean>
<bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
<property name="url" value="jdbc:mysql://localhost:3306/springDB"/>
<property name="username" value="root"/>
<property name="password" value="Karthick@1225"/>
</bean>
<bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">
<property name="dataSource" ref="ds"/>
</bean>
<bean id="dao" class="com.pagination.dao.EmpDao">
<property name="template" ref="jt"/>
</bean>
</beans>

// web.xml

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns="http://java.sun.com/xml/ns/javaee"
 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
	<display-name>SpringMVC-CRUD</display-name>
	<servlet>
	<servlet-name>spring</servlet-name>
	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	<init-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring-servlet.xml</param-value> 
	</init-param>
	<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
	<servlet-name>spring</servlet-name>
	<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>